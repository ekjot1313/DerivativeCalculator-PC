/* Abbreviations used :-

 * power   `
 * log   !
 * exp   ~
 * sin   {
 * cos   [
 * tan   <
 * cot   /              &               ffffffffffffffff
 * sec   :
 * cosec  "
 * sin-1   }
 * cos-1   ]
 * tan-1   >
 * cot-1   \
 * sec-1   .          @                 ffffffffffffffff
 * cosec-1  '
 *

*/



/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DerivativeCalc.java
 *
 * Created on Aug 25, 2013, 9:32:12 PM
 */
/**
 *
 * @author ekjot
 */
public class DerivativeCalc extends javax.swing.JFrame {

    /** Creates new form DerivativeCalc */
    public DerivativeCalc() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        atxt = new javax.swing.JTextField();
        ctxt = new javax.swing.JTextField();
        a_ok = new javax.swing.JButton();
        c_ok = new javax.swing.JButton();
        EntOutputtxt = new javax.swing.JTextField();
        find = new javax.swing.JButton();
        EntInputtxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        pow_but = new javax.swing.JButton();
        log_but = new javax.swing.JButton();
        exp_but = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        sin_but = new javax.swing.JButton();
        cos_but = new javax.swing.JButton();
        tan_but = new javax.swing.JButton();
        cot_but = new javax.swing.JButton();
        sec_but = new javax.swing.JButton();
        cosec_but = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        tan_inv_but = new javax.swing.JButton();
        sec_inv_but = new javax.swing.JButton();
        sin_inv_but = new javax.swing.JButton();
        cos_inv_but = new javax.swing.JButton();
        cot_inv_but = new javax.swing.JButton();
        cosec_inv_but = new javax.swing.JButton();
        powtxt = new javax.swing.JTextField();
        default_but = new javax.swing.JButton();
        anstxt = new javax.swing.JTextField();
        convert = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 3, 36)); // NOI18N
        jLabel1.setText("Derivative Calculator ");

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        jLabel2.setText("Variable : ");

        jLabel3.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        jLabel3.setText("a : ");

        jLabel4.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        jLabel4.setText("c : ");

        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Comic Sans MS", 3, 17)); // NOI18N
        jTextField1.setText("x");

        atxt.setFont(new java.awt.Font("Comic Sans MS", 3, 17)); // NOI18N
        atxt.setText("1");

        ctxt.setEditable(false);
        ctxt.setFont(new java.awt.Font("Comic Sans MS", 3, 17)); // NOI18N
        ctxt.setText("0");

        a_ok.setText("OK");
        a_ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a_okActionPerformed(evt);
            }
        });

        c_ok.setText("OK");
        c_ok.setEnabled(false);
        c_ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c_okActionPerformed(evt);
            }
        });

        EntOutputtxt.setEditable(false);
        EntOutputtxt.setFont(new java.awt.Font("Comic Sans MS", 3, 17)); // NOI18N
        EntOutputtxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        EntOutputtxt.setText("x");

        find.setText("Find");
        find.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findActionPerformed(evt);
            }
        });

        EntInputtxt.setEditable(false);
        EntInputtxt.setFont(new java.awt.Font("Comic Sans MS", 3, 17)); // NOI18N
        EntInputtxt.setText("x");

        jLabel5.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        jLabel5.setText("f(x) : ");

        pow_but.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        pow_but.setText("Power");
        pow_but.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pow_butActionPerformed(evt);
            }
        });

        log_but.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        log_but.setText("log");
        log_but.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                log_butActionPerformed(evt);
            }
        });

        exp_but.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        exp_but.setText("Exp");
        exp_but.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exp_butActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Trigonometry", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Comic Sans MS", 3, 16))); // NOI18N

        sin_but.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        sin_but.setText("sin");
        sin_but.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sin_butActionPerformed(evt);
            }
        });

        cos_but.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        cos_but.setText("cos");
        cos_but.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cos_butActionPerformed(evt);
            }
        });

        tan_but.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        tan_but.setText("tan");
        tan_but.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tan_butActionPerformed(evt);
            }
        });

        cot_but.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        cot_but.setText("cot");
        cot_but.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cot_butActionPerformed(evt);
            }
        });

        sec_but.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        sec_but.setText("sec");
        sec_but.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sec_butActionPerformed(evt);
            }
        });

        cosec_but.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        cosec_but.setText("cosec");
        cosec_but.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cosec_butActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tan_but, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sec_but, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sin_but, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cos_but, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cot_but, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cosec_but))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(cos_but)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cot_but)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cosec_but))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(sin_but)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tan_but)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sec_but)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Inverse Trigonometry", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Comic Sans MS", 3, 16))); // NOI18N

        tan_inv_but.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        tan_inv_but.setText("tan^-1");
        tan_inv_but.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tan_inv_butActionPerformed(evt);
            }
        });

        sec_inv_but.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        sec_inv_but.setText("sec^-1");
        sec_inv_but.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sec_inv_butActionPerformed(evt);
            }
        });

        sin_inv_but.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        sin_inv_but.setText("sin^-1");
        sin_inv_but.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sin_inv_butActionPerformed(evt);
            }
        });

        cos_inv_but.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        cos_inv_but.setText("cos^-1");
        cos_inv_but.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cos_inv_butActionPerformed(evt);
            }
        });

        cot_inv_but.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        cot_inv_but.setText("cot^-1");
        cot_inv_but.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cot_inv_butActionPerformed(evt);
            }
        });

        cosec_inv_but.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        cosec_inv_but.setText("cosec^-1");
        cosec_inv_but.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cosec_inv_butActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(sec_inv_but, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tan_inv_but, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sin_inv_but, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cot_inv_but, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cos_inv_but, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cosec_inv_but)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(sin_inv_but)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tan_inv_but)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sec_inv_but))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(cos_inv_but)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cot_inv_but)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cosec_inv_but)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        powtxt.setFont(new java.awt.Font("Comic Sans MS", 3, 17)); // NOI18N
        powtxt.setText("1");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(powtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pow_but)
                        .addGap(28, 28, 28)
                        .addComponent(log_but, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(exp_but, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exp_but)
                    .addComponent(log_but)
                    .addComponent(pow_but)
                    .addComponent(powtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(65, Short.MAX_VALUE))
        );

        default_but.setText("Default");
        default_but.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                default_butActionPerformed(evt);
            }
        });

        anstxt.setFont(new java.awt.Font("Comic Sans MS", 3, 17)); // NOI18N
        anstxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        convert.setText("Convert");
        convert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convertActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(58, 58, 58)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ctxt, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(atxt, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(7, 7, 7)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(c_ok)
                                    .addComponent(a_ok)))
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(EntOutputtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(find))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(anstxt, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(convert, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(EntInputtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(35, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(599, Short.MAX_VALUE)
                .addComponent(default_but))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(a_ok, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(c_ok, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(atxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(ctxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel4))))))
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(find, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(EntOutputtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(EntInputtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(default_but))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(anstxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(convert, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    String func = "x", EntOutput = "x", EntInput = "x";
    float a = 1, b = 1, c = 0, pow = 1;
    int aonce = 0, conce = 0,findonce=0;
String finalans="";


    public void Enter(String outtemp, String intemp) {

        EntOutput = outtemp;
        EntInput = intemp;
        EntOutputtxt.setText(outtemp);
        EntInputtxt.setText(intemp);

    }



public void repeater(String temp){
func=temp;
find.doClick();
}



    public void Master(String func){


        int len=func.length();

        for(int x=0;func.charAt(x)!='x';)               //power
        {


 if (func.charAt(x) == '`')
 {
                int k = 1;
                for (; func.charAt(k) != '('; k++) {}
                int j=len-1;
                 for (; func.charAt(j) != ')'; k--) {}
                
                

                float num = Float.parseFloat(func.substring(1, k));

                func = func.substring(k + 1, j);

                finalans =finalans+Power(func, num);
               anstxt.setText(finalans);
               repeater(func);
            
                        break;
 }


else if(func.charAt(x)=='!')      //log
{
    
    int k = 1;
    for (; func.charAt(k) != '('; k++) {
    }
    int j = len - 1;
    for (; func.charAt(j) != ')'; k--) {
    }
    func = func.substring(k + 1, j);
    finalans = finalans + Log(func);
    anstxt.setText(finalans);
    repeater(func);

    break;
}



else if(func.charAt(x)=='~')       //exp
{
         int k = 1;
    for (; func.charAt(k) != '('; k++) {
    }
    int j = len - 1;
    for (; func.charAt(j) != ')'; k--) {
    }
    func = func.substring(k + 1, j);
    finalans = finalans + Exp(func);
    anstxt.setText(finalans);
    repeater(func);

    break;
}





else if(func.charAt(x)=='{')             // sin
{
int k = 1;
    for (; func.charAt(k) != '('; k++) {
    }
    int j = len - 1;
    for (; func.charAt(j) != ')'; k--) {
    }
    func = func.substring(k + 1, j);
    finalans = finalans + Sin(func);
    anstxt.setText(finalans);
    repeater(func);

    break;
    
  

}



else if(func.charAt(x)=='[')            //cos
{
    int k = 1;
    for (; func.charAt(k) != '('; k++) {
    }
    int j = len - 1;
    for (; func.charAt(j) != ')'; k--) {
    }
    func = func.substring(k + 1, j);
    finalans = finalans + Cos(func);
    anstxt.setText(finalans);
    repeater(func);
    break;

}


else if(func.charAt(x)=='<')             //tan
{
    int k = 1;
    for (; func.charAt(k) != '('; k++) {
    }
    int j = len - 1;
    for (; func.charAt(j) != ')'; k--) {
    }
    func = func.substring(k + 1, j);
    finalans = finalans + Tan(func);
    anstxt.setText(finalans);
    repeater(func);


    break;
}



else if(func.charAt(x)=='&')             //cot
{
     int k = 1;
    for (; func.charAt(k) != '('; k++) {
    }
    int j = len - 1;
    for (; func.charAt(j) != ')'; k--) {
    }
    func = func.substring(k + 1, j);
    finalans = finalans + Cot(func);
    anstxt.setText(finalans);
    repeater(func);

    break;
}



else if(func.charAt(x)==':')         //sec
{
     int k = 1;
    for (; func.charAt(k) != '('; k++) {
    }
    int j = len - 1;
    for (; func.charAt(j) != ')'; k--) {
    }
    func = func.substring(k + 1, j);
    finalans = finalans + Sec(func);
    anstxt.setText(finalans);
    repeater(func);
    break;
}

else if(func.charAt(x)=='\"')       //cosec
{
     int k = 1;
    for (; func.charAt(k) != '('; k++) {
    }
    int j = len - 1;
    for (; func.charAt(j) != ')'; k--) {
    }
    func = func.substring(k + 1, j);
    finalans = finalans + Cosec(func);
    anstxt.setText(finalans);
    repeater(func);

    break;
}

else if(func.charAt(x)=='}')          //sin inv
{
int k = 1;
    for (; func.charAt(k) != '('; k++) {
    }
    int j = len - 1;
    for (; func.charAt(j) != ')'; k--) {
    }
    func = func.substring(k + 1, j);
    finalans = finalans + SinInv(func);
    anstxt.setText(finalans);
    repeater(func);
    break;
}


else if(func.charAt(x)==']')         //cos inv
{
    int k = 1;
    for (; func.charAt(k) != '('; k++) {
    }
    int j = len - 1;
    for (; func.charAt(j) != ')'; k--) {
    }
    func = func.substring(k + 1, j);
    finalans = finalans + CosInv(func);
    anstxt.setText(finalans);
    repeater(func);

    break;
}

else if(func.charAt(x)=='>')   //tan inv
{
    int k = 1;
    for (; func.charAt(k) != '('; k++) {
    }
    int j = len - 1;
    for (; func.charAt(j) != ')'; k--) {
    }
    func = func.substring(k + 1, j);
    finalans = finalans + TanInv(func);
    anstxt.setText(finalans);
    repeater(func);

    break;
}

else if(func.charAt(x)=='\\')    //Cot inv
{
    int k = 1;
    for (; func.charAt(k) != '('; k++) {
    }
    int j = len - 1;
    for (; func.charAt(j) != ')'; k--) {
    }
    func = func.substring(k + 1, j);
    finalans = finalans + CotInv(func);
    anstxt.setText(finalans);
    repeater(func);
    break;
}

else if(func.charAt(x)=='@')           //sec inv
{
    int k = 1;
    for (; func.charAt(k) != '('; k++) {
    }
    int j = len - 1;
    for (; func.charAt(j) != ')'; k--) {
    }
    func = func.substring(k + 1, j);
    finalans = finalans + SecInv(func);
    anstxt.setText(finalans);
    repeater(func);
    break;
}

else if(func.charAt(x)=='\'')           //cosec inv
{
    int k = 1;
    for (; func.charAt(k) != '('; k++) {
    }
    int j = len - 1;
    for (; func.charAt(j) != ')'; k--) {
    }
    func = func.substring(k + 1, j);
    finalans = finalans + CosecInv(func);
    anstxt.setText(finalans);
    repeater(func);
    break;

}

else              // linear
{
     int k = 1;
    for (; func.charAt(k) != '('; k++) {
    }
    int j = len - 1;
    for (; func.charAt(j) != ')'; k--) {
    }
    func = func.substring(k + 1, j);
     finalans=finalans+"("+a+")";
     anstxt.setText(finalans);
    repeater(func);

    break;
}}}




public String Power(String func,float pow){
float ans= pow;
pow=pow-1;
String anss="";
    if(pow!=0){ if(pow==1){anss="("+ans+"("+func+"))";} else{anss="("+ans+"("+func+")^"+pow+")";}}
    else{anss=ans+"";}
    return(anss);
}
public String Log(String func){
String anss="(1/"+func+")";
        return(anss);
}
public String Exp(String func){
String anss="~("+func+")";
    return(anss);
}
public String Sin(String func){
    String anss="([("+func+"))";

return(anss);
}
public String Cos(String func){
String anss="(-{("+func+"))";
    return(anss);
}
public String Tan(String func){
    String anss="(:^2("+func+"))";
    return(anss);}
public String Cot(String func){
String anss="(-\"^2("+func+"))";
    return(anss);
}
public String Sec(String func){
String anss="(:("+func+") <("+func+"))";
    return(anss);
}
public String Cosec(String func){
String anss="(-\"("+func+") &("+func+"))";
    return(anss);
}
public String SinInv(String func){
String anss="(1/√(1 - ("+func+")^2)";
    return(anss);
}
public String CosInv(String func){
String anss="(-1/√(1 - ("+func+")^2)";
    return(anss);
}
public String TanInv(String func){
String anss="(1/1 + ("+func+")^2)";
    return(anss);
}
public String CotInv(String func){
String anss="(-1/1 + ("+func+")^2)";
    return(anss);
}
public String SecInv(String func){
String anss="(1/√(("+func+")^2 - 1)";
    return(anss);
}
public String CosecInv(String func){
String anss="(-1/√(("+func+")^2 - 1)";
    return(anss);
}



    private void a_okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a_okActionPerformed

        if (aonce == 0) {
            a = Float.parseFloat(atxt.getText().trim());

         if(a!=1){   Enter(a + "(" + EntOutput + ")", a + "(" + EntInput + ")");}
            aonce++;
            atxt.setEditable(false);
            c_ok.setEnabled(true);
            ctxt.setEditable(true);
            //a_ok.setEnabled(false);

        }
      
        

    // TODO add your handling code here:
}//GEN-LAST:event_a_okActionPerformed

    private void c_okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c_okActionPerformed
        if (conce == 0) {


            c = Float.parseFloat(ctxt.getText());
            ctxt.setEditable(false);

           if(c!=0){ Enter("(" + EntOutput + "+(" + c + "))", "(" + EntInput + "+(" + c + "))");}
            c_ok.setEnabled(false);
            conce++;
        }




    // TODO add your handling code here:
}//GEN-LAST:event_c_okActionPerformed

    private void pow_butActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pow_butActionPerformed

        pow = Float.parseFloat(powtxt.getText());

        Enter("(" + EntOutput + ")^" + pow, "`" + pow + "(" + EntInput + ")");
        pow = 1;


    // TODO add your handling code here:
}//GEN-LAST:event_pow_butActionPerformed

    private void default_butActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_default_butActionPerformed

        func = "x";
        EntOutput = "x";
        EntInput = "x";
        a = 1;
        b = 1;
        c = 0;
        aonce = 0;
        conce = 0;
        findonce=0;



        atxt.setText("1");
        atxt.setEditable(true);
        a_ok.setEnabled(true);
        ctxt.setText("0");
        powtxt.setText("1");



        EntOutputtxt.setText("x");
        EntInputtxt.setText("x");
         anstxt.setText(""); finalans="";





    // TODO add your handling code here:
}//GEN-LAST:event_default_butActionPerformed

    private void log_butActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_log_butActionPerformed

        Enter("log(" + EntOutput + ")", "!(" + EntInput + ")");





    // TODO add your handling code here:
    }//GEN-LAST:event_log_butActionPerformed

    private void exp_butActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exp_butActionPerformed


        Enter("e^(" + EntOutput + ")", "~(" + EntInput + ")");



    // TODO add your handling code here:
    }//GEN-LAST:event_exp_butActionPerformed

    private void sin_butActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sin_butActionPerformed


        Enter("sin(" + EntOutput + ")", "{(" + EntInput + ")");

    // TODO add your handling code here:
    }//GEN-LAST:event_sin_butActionPerformed

    private void cos_butActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cos_butActionPerformed

        Enter("cos(" + EntOutput + ")", "[(" + EntInput + ")");

        // TODO add your handling code here:
    }//GEN-LAST:event_cos_butActionPerformed

    private void tan_butActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tan_butActionPerformed
Enter("tan(" + EntOutput + ")", "<(" + EntInput + ")");
        // TODO add your handling code here:
    }//GEN-LAST:event_tan_butActionPerformed

    private void cot_butActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cot_butActionPerformed
Enter("cot(" + EntOutput + ")", "&(" + EntInput + ")");
        // TODO add your handling code here:
    }//GEN-LAST:event_cot_butActionPerformed

    private void sec_butActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sec_butActionPerformed
Enter("sec(" + EntOutput + ")", ":(" + EntInput + ")");
        // TODO add your handling code here:
    }//GEN-LAST:event_sec_butActionPerformed

    private void cosec_butActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cosec_butActionPerformed
Enter("cosec(" + EntOutput + ")", "\"(" + EntInput + ")");
        // TODO add your handling code here:
    }//GEN-LAST:event_cosec_butActionPerformed

    private void sin_inv_butActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sin_inv_butActionPerformed
Enter("sin_Inv(" + EntOutput + ")", "}(" + EntInput + ")");

        // TODO add your handling code here:
    }//GEN-LAST:event_sin_inv_butActionPerformed

    private void cos_inv_butActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cos_inv_butActionPerformed
Enter("cos_Inv(" + EntOutput + ")", "](" + EntInput + ")");
        // TODO add your handling code here:
    }//GEN-LAST:event_cos_inv_butActionPerformed

    private void tan_inv_butActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tan_inv_butActionPerformed
Enter("tan_Inv(" + EntOutput + ")", ">(" + EntInput + ")");
        // TODO add your handling code here:
    }//GEN-LAST:event_tan_inv_butActionPerformed

    private void cot_inv_butActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cot_inv_butActionPerformed
Enter("cot_Inv(" + EntOutput + ")", "\\(" + EntInput + ")");
        // TODO add your handling code here:
    }//GEN-LAST:event_cot_inv_butActionPerformed

    private void sec_inv_butActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sec_inv_butActionPerformed
Enter("sec_Inv(" + EntOutput + ")", "@(" + EntInput + ")");
        // TODO add your handling code here:
    }//GEN-LAST:event_sec_inv_butActionPerformed

    private void cosec_inv_butActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cosec_inv_butActionPerformed
Enter("cosec_Inv(" + EntOutput + ")", "'(" + EntInput + ")");
        // TODO add your handling code here:
    }//GEN-LAST:event_cosec_inv_butActionPerformed

    private void findActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findActionPerformed

        if(findonce==0){func=EntInputtxt.getText(); findonce++;}


Master(func);
        
        // TODO add your handling code here:
    }//GEN-LAST:event_findActionPerformed

    private void convertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_convertActionPerformed
 String finalanstext="",temp=anstxt.getText();

        int len=temp.length();
        for(int i=0;i<len;i++){
        /* Abbreviations used :-

 * power   `
 * log   !
 * exp   ~
 * sin   {
 * cos   [
 * tan   <
 * cot   &
 * sec   :
 * cosec  "
 * sin-1   }
 * cos-1   ]
 * tan-1   >
 * cot-1   \
 * sec-1   @
 * cosec-1  '
 *

*/
        if(temp.charAt(i)=='`'){ finalanstext=finalanstext+"`";}
        else if(temp.charAt(i)=='!'){ finalanstext=finalanstext+"log";}
        else if(temp.charAt(i)=='~'){ finalanstext=finalanstext+"e^";}
        else if(temp.charAt(i)=='{'){ finalanstext=finalanstext+"sin";}
        else if(temp.charAt(i)=='['){ finalanstext=finalanstext+"cos";}
        else if(temp.charAt(i)=='<'){ finalanstext=finalanstext+"tan";}
        else if(temp.charAt(i)=='&'){ finalanstext=finalanstext+"cot";}
        else if(temp.charAt(i)==':'){ finalanstext=finalanstext+"sec";}
        else if(temp.charAt(i)=='\"'){ finalanstext=finalanstext+"cosec";}
        else if(temp.charAt(i)=='}'){ finalanstext=finalanstext+"sin_Inv";}
        else if(temp.charAt(i)==']'){ finalanstext=finalanstext+"cos_Inv";}
        else if(temp.charAt(i)=='>'){ finalanstext=finalanstext+"tan_Inv";}
        else if(temp.charAt(i)=='\\'){ finalanstext=finalanstext+"cot_Inv";}
        else if(temp.charAt(i)=='@'){ finalanstext=finalanstext+"sec_Inv";}
        else if(temp.charAt(i)=='\''){ finalanstext=finalanstext+"cosec_Inv";}
        else { finalanstext=finalanstext+temp.charAt(i);}

        }

        anstxt.setText(finalanstext);


                // TODO add your handling code here:
    }//GEN-LAST:event_convertActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new DerivativeCalc().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField EntInputtxt;
    private javax.swing.JTextField EntOutputtxt;
    private javax.swing.JButton a_ok;
    private javax.swing.JTextField anstxt;
    private javax.swing.JTextField atxt;
    private javax.swing.JButton c_ok;
    private javax.swing.JButton convert;
    private javax.swing.JButton cos_but;
    private javax.swing.JButton cos_inv_but;
    private javax.swing.JButton cosec_but;
    private javax.swing.JButton cosec_inv_but;
    private javax.swing.JButton cot_but;
    private javax.swing.JButton cot_inv_but;
    private javax.swing.JTextField ctxt;
    private javax.swing.JButton default_but;
    private javax.swing.JButton exp_but;
    private javax.swing.JButton find;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton log_but;
    private javax.swing.JButton pow_but;
    private javax.swing.JTextField powtxt;
    private javax.swing.JButton sec_but;
    private javax.swing.JButton sec_inv_but;
    private javax.swing.JButton sin_but;
    private javax.swing.JButton sin_inv_but;
    private javax.swing.JButton tan_but;
    private javax.swing.JButton tan_inv_but;
    // End of variables declaration//GEN-END:variables
}
